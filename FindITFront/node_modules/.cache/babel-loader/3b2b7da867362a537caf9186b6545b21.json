{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Panttinen\\\\source\\\\repos\\\\FindIT\\\\FindITFront\\\\src\\\\components\\\\pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaginationComponent = _ref => {\n  _s();\n\n  let {\n    itemsCount,\n    itemsPerPage,\n    currentPage,\n    setCurrentPage,\n    alwaysShown = true\n  } = _ref;\n  const pagesCount = Math.ceil(itemsCount / itemsPerPage);\n  const isPaginationShown = alwaysShown ? true : pagesCount > 1;\n  const isCurrentPageFirst = currentPage === 1;\n  const isCurrentPageLast = currentPage === pagesCount;\n\n  const changePage = number => {\n    if (currentPage === number) return;\n\n    if (number < 1) {\n      number = 1;\n    }\n\n    setCurrentPage(number);\n  };\n\n  const onPageNumberClick = pageNumber => {\n    changePage(pageNumber);\n  };\n\n  const onPreviousPageClick = () => {\n    changePage(currentPage => currentPage - 1);\n  };\n\n  const onNextPageClick = () => {\n    changePage(currentPage => currentPage + 1);\n  };\n\n  const setLastPageAsCurrent = () => {\n    if (currentPage > pagesCount) {\n      if (pagesCount < 1) {\n        setCurrentPage(1);\n      } else {\n        setCurrentPage(pagesCount);\n      }\n    }\n  };\n\n  let isPageNumberOutOfRange;\n  const pageNumbers = [...new Array(pagesCount)].map((_, index) => {\n    const pageNumber = index + 1;\n    const isPageNumberFirst = pageNumber === 1;\n    const isPageNumberLast = pageNumber === pagesCount;\n    const isCurrentPageWithinTwoPageNumbers = Math.abs(pageNumber - currentPage) <= 2;\n\n    if (isPageNumberFirst || isPageNumberLast || isCurrentPageWithinTwoPageNumbers) {\n      isPageNumberOutOfRange = false;\n      return /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        onClick: () => onPageNumberClick(pageNumber),\n        active: pageNumber === currentPage,\n        children: pageNumber\n      }, pageNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!isPageNumberOutOfRange) {\n      isPageNumberOutOfRange = true;\n      return /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n        className: \"muted\"\n      }, pageNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    }\n\n    return null;\n  });\n  useEffect(setLastPageAsCurrent);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPaginationShown && /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        onClick: onPreviousPageClick,\n        disabled: isCurrentPageFirst\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), pageNumbers, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        onClick: onNextPageClick,\n        disabled: isCurrentPageLast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaginationComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"names":["React","useEffect","Pagination","PaginationComponent","itemsCount","itemsPerPage","currentPage","setCurrentPage","alwaysShown","pagesCount","Math","ceil","isPaginationShown","isCurrentPageFirst","isCurrentPageLast","changePage","number","onPageNumberClick","pageNumber","onPreviousPageClick","onNextPageClick","setLastPageAsCurrent","isPageNumberOutOfRange","pageNumbers","Array","map","_","index","isPageNumberFirst","isPageNumberLast","isCurrentPageWithinTwoPageNumbers","abs"],"sources":["C:/Users/Panttinen/source/repos/FindIT/FindITFront/src/components/pagination.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst PaginationComponent = ({\r\n  itemsCount,\r\n  itemsPerPage,\r\n  currentPage,\r\n  setCurrentPage,\r\n  alwaysShown = true\r\n}) => {\r\n  const pagesCount = Math.ceil(itemsCount / itemsPerPage);\r\n  const isPaginationShown = alwaysShown ? true : pagesCount > 1;\r\n  const isCurrentPageFirst = currentPage === 1;\r\n  const isCurrentPageLast = currentPage === pagesCount;\r\n\r\n  const changePage = number => {\r\n    if (currentPage === number) return;\r\n\t\tif (number < 1)\r\n\t\t{\r\n\t\t\tnumber = 1\r\n\t\t}\r\n    setCurrentPage(number);\r\n  };\r\n\r\n  const onPageNumberClick = pageNumber => {\r\n    changePage(pageNumber);\r\n  };\r\n\r\n  const onPreviousPageClick = () => {\r\n    changePage(currentPage => currentPage - 1);\r\n  };\r\n\r\n  const onNextPageClick = () => {\r\n    changePage(currentPage => currentPage + 1);\r\n  };\r\n\r\n  const setLastPageAsCurrent = () => {\r\n    if (currentPage > pagesCount) {\r\n\t\t\tif (pagesCount < 1)\r\n\t\t\t{\r\n\t\t\t\tsetCurrentPage(1)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsetCurrentPage(pagesCount);\r\n\t\t\t}\r\n    }\r\n  };\r\n\r\n  let isPageNumberOutOfRange;\r\n\r\n  const pageNumbers = [...new Array(pagesCount)].map((_, index) => {\r\n    const pageNumber = index + 1;\r\n    const isPageNumberFirst = pageNumber === 1;\r\n    const isPageNumberLast = pageNumber === pagesCount;\r\n    const isCurrentPageWithinTwoPageNumbers =\r\n      Math.abs(pageNumber - currentPage) <= 2;\r\n\r\n    if (\r\n      isPageNumberFirst ||\r\n      isPageNumberLast ||\r\n      isCurrentPageWithinTwoPageNumbers\r\n    ) {\r\n      isPageNumberOutOfRange = false;\r\n      return (\r\n        <Pagination.Item\r\n          key={pageNumber}\r\n          onClick={() => onPageNumberClick(pageNumber)}\r\n          active={pageNumber === currentPage}\r\n        >\r\n          {pageNumber}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    if (!isPageNumberOutOfRange) {\r\n      isPageNumberOutOfRange = true;\r\n      return <Pagination.Ellipsis key={pageNumber} className=\"muted\" />;\r\n    }\r\n\r\n    return null;\r\n  });\r\n\r\n  useEffect(setLastPageAsCurrent);\r\n\r\n  return (\r\n    <>\r\n      {isPaginationShown && (\r\n        <Pagination>\r\n          <Pagination.Prev\r\n            onClick={onPreviousPageClick}\r\n            disabled={isCurrentPageFirst}\r\n          />\r\n          {pageNumbers}\r\n          <Pagination.Next\r\n            onClick={onNextPageClick}\r\n            disabled={isCurrentPageLast}\r\n          />\r\n        </Pagination>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}